version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8000:8000"
    volumes:
      - ./src/image_recognition:/src
      - ./config/nginx/http:/etc/nginx/conf.d
    depends_on:
      - web
    networks:
      - djangonetwork

  web:
    build:
      context: ./src/image_recognition
      dockerfile: ../../compose/django/Dockerfile
    container_name: web
    volumes:
      - ./src/image_recognition:/src
    expose:
      - "8000"
    env_file:
      - ./envs/django/dev.env
    depends_on:
      - db
    links:
      - redis
    networks:
      - djangonetwork

  db:
    restart: unless-stopped
    build:
      context: .
      dockerfile: compose/postgres/Dockerfile
    container_name: postgres
    env_file:
      - ./envs/postgres/dev.env
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups

  redis:
    image: redis:alpine
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      - djangonetwork
    restart: always

  flask_recognition_api:
    build:
      context: ./src/recognition_api
      dockerfile: ../../compose/flask/recognition_api/Dockerfile
    container_name: flask_recognition_api
    volumes:
      - ./src/recognition_api:/recognition_api
    ports:
      - "5001:5001"
    expose:
      - "5001"
    env_file:
      - ./envs/recognition_api/prod.env
    networks:
      - djangonetwork

  flask_emotion_api:
    build:
      context: ./src/emotion_api
      dockerfile: ../../compose/flask/emotion_api/Dockerfile
    container_name: flask_emotion_api
    volumes:
      - ./src/emotion_api:/emotion_api
    ports:
      - "5002:5002"
    expose:
      - "5002"
    env_file:
      - ./envs/emotion_api/prod.env
    networks:
      - djangonetwork

  flask_fake_detection_api:
    build:
      context: ./src/fake_detection_api
      dockerfile: ../../compose/flask/fake_detection_api/Dockerfile
    container_name: flask_fake_detection_api
    volumes:
      - ./src/fake_detection_api:/fake_detection_api
    ports:
      - "5003:5003"
    expose:
      - "5003"
    env_file:
      - ./envs/flask_fake_detection_api/prod.env
    networks:
      - djangonetwork

networks:
  djangonetwork:
    driver: bridge
